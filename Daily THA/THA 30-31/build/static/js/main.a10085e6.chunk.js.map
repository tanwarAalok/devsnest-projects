{"version":3,"sources":["containers/header.jsx","containers/productComponent.jsx","redux/contants/action-type.js","redux/actions/productActions.js","containers/productListing.jsx","containers/productDetails.jsx","containers/cart.jsx","App.jsx","redux/reducers/productReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Header","className","id","stroke","fill","viewBox","height","width","xmlns","cx","cy","r","d","ProductComponent","renderList","useSelector","state","allProducts","products","map","product","title","image","price","category","to","src","alt","ActionTypes","setProducts","type","payload","selectedProduct","ProductListing","dispatch","useDispatch","console","log","fetchProducts","a","axios","get","catch","err","response","data","useEffect","ProductDetails","description","productId","useParams","fetchProductDetail","Object","keys","length","tabIndex","Cart","app","path","exact","component","initialState","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLA6BeA,EA3BA,WACX,OACE,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIC,GAAG,MAAP,wBACA,sBACEA,GAAG,YACHC,OAAO,eACPC,KAAK,OACL,eAAa,IACbC,QAAQ,YACR,iBAAe,QACf,kBAAgB,QAChBC,OAAO,MACPC,MAAM,MACNC,MAAM,6BAVR,UAYE,wBAAQC,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,wBAAQF,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,sBAAMC,EAAE,6E,+CCaLC,EA9BU,WACvB,IACMC,EADWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYC,YAC9BC,KAAI,SAACC,GAC/B,IAAQlB,EAAsCkB,EAAtClB,GAAImB,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACjC,OACE,qBAAKvB,UAAU,mBAAf,SACE,cAAC,IAAD,CAAMwB,GAAE,mBAAcvB,GAAtB,SACE,qBAAKD,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKyB,IAAKJ,EAAOK,IAAKN,MAExB,sBAAKpB,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBoB,IACzB,sBAAKpB,UAAU,aAAf,eAA+BsB,KAC/B,qBAAKtB,UAAU,OAAf,SAAuBuB,eAVMtB,MAmB3C,OACE,mCAAGY,K,iBC7BMc,EACM,eADNA,EAEW,mBAFXA,EAGiB,0BCAjBC,EAAc,SAACX,GACxB,MAAO,CACHY,KAAMF,EACNG,QAASb,IAIJc,EAAkB,SAACZ,GAC5B,MAAO,CACHU,KAAMF,EACNG,QAASX,ICgBFa,EAvBQ,WACnB,IAAMf,EAAWH,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYG,WACpDc,EAAWC,cACjBC,QAAQC,IAAInB,GAEZ,IAAMoB,EAAa,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,qCAAqCC,OAAM,SAACC,GACzEP,QAAQC,IAAI,QAASM,MAFP,OACZC,EADY,OAIlBV,EAASL,EAAYe,EAASC,OAJZ,2CAAH,qDAWnB,OAJAC,qBAAU,WACNR,MACD,IAGC,qBAAKrC,UAAU,oBAAf,SACI,cAAC,EAAD,OCuCG8C,EAxDQ,WACrB,IAAM3B,EAAUL,aAAY,SAACC,GAAD,OAAWA,EAAMI,WACrCE,EAA+CF,EAA/CE,MAAOD,EAAwCD,EAAxCC,MAAOE,EAAiCH,EAAjCG,MAAOC,EAA0BJ,EAA1BI,SAAUwB,EAAgB5B,EAAhB4B,YAC/BC,EAAcC,cAAdD,UACFf,EAAWC,cACjBC,QAAQC,IAAIjB,GAEZ,IAAM+B,EAAkB,uCAAG,4BAAAZ,EAAA,sEACFC,IAAMC,IAAN,4CAA+CQ,IAAaP,OAAM,SAACC,GACxFP,QAAQC,IAAI,MAAOM,MAFI,OACnBC,EADmB,OAKzBV,EAASF,EAAgBY,EAASC,OALT,2CAAH,qDAexB,OAPAC,qBAAU,WAER,OADIG,GAA2B,KAAdA,GAAkBE,IAC5B,WACLjB,EFPG,CACLJ,KAAMF,OEQL,CAACqB,IAGF,qBAAKhD,UAAU,oBAAf,SACmC,IAAhCmD,OAAOC,KAAKjC,GAASkC,OACpB,6CAEA,qBAAKrD,UAAU,yBAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,sBAAf,iBACA,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAiByB,IAAKJ,MAEvC,sBAAKrB,UAAU,YAAf,UACE,6BAAKoB,IACL,6BACE,oBAAGpB,UAAU,oBAAb,cAAmCsB,OAErC,oBAAItB,UAAU,wBAAd,SAAuCuB,IACvC,4BAAIwB,IACJ,sBAAK/C,UAAU,8BAA8BsD,SAAS,IAAtD,UACE,qBAAKtD,UAAU,iBAAf,SACE,mBAAGA,UAAU,gBAEf,qBAAKA,UAAU,kBAAf,0CC1CHuD,EARF,WACT,OACI,qBAAKvD,UAAU,kBCIR,SAASwD,IACpB,OACE,qBAAKxD,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyD,KAAK,IAAIC,OAAK,EAACC,UAAW3B,IACjC,cAAC,IAAD,CACEyB,KAAK,sBACLC,OAAK,EACLC,UAAWb,IAEb,cAAC,IAAD,gCAEF,cAAC,EAAD,S,oBCpBJc,EAAe,CACjB3C,SAAU,ICKC4C,EALEC,YAAgB,CAC/B9C,YDE4B,WAA8C,IAA7CD,EAA4C,uDAApC6C,EAAoC,yCAApB/B,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzD,OAAQD,GACJ,KAAKF,EACD,OAAO,2BAAIZ,GAAX,IAAkBE,SAASa,IAC/B,QACI,OAAOf,ICNjBI,QDUoC,WAAoC,IAAnCJ,EAAkC,uDAA1B,GAA0B,yCAApBc,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvD,OAAQD,GACN,KAAKF,EACH,OAAO,2BAAKZ,GAAUe,GACxB,KAAKH,EACH,MAAO,GACT,QACE,OAAOZ,MEhBAgD,EAFDC,YAAYH,EAAU,ICEpCI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.a10085e6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"ui fixed menu\">\r\n        <div className=\"ui container center\">\r\n          <h1 id=\"top\" >Redux Cart</h1>\r\n          <svg\r\n            id=\"cart-icon\"\r\n            stroke=\"currentColor\"\r\n            fill=\"none\"\r\n            stroke-width=\"2\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            height=\"1em\"\r\n            width=\"1em\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\r\n            <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\r\n            <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\r\n          </svg>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProductComponent = () => {\r\n  const products = useSelector((state) => state.allProducts.products);\r\n  const renderList = products.map((product) => {\r\n    const { id, title, image, price, category } = product;\r\n    return (\r\n      <div className=\"four wide column\" key={id}>\r\n        <Link to={`/product/${id}`}>\r\n          <div className=\"ui link cards\">\r\n            <div className=\"card\">\r\n              <div className=\"image\">\r\n                <img src={image} alt={title} />\r\n              </div>\r\n              <div className=\"content\">\r\n                <div className=\"header\">{title}</div>\r\n                <div className=\"meta price\">$ {price}</div>\r\n                <div className=\"meta\">{category}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>{renderList}</>\r\n  );\r\n  \r\n};\r\n\r\nexport default ProductComponent;\r\n","export const ActionTypes = {\r\n    SET_PRODUCTS : \"SET_PRODUCTS\",\r\n    SELECTED_PRODUCTS : \"SELECTED_PRODUCT\",\r\n    REMOVE_SELECTED_PRODUCT : \"REMOVE_SELECTED_PRODUCT\",\r\n};","import { ActionTypes } from \"../contants/action-type\"\r\n\r\n\r\nexport const setProducts = (products) => {\r\n    return {\r\n        type: ActionTypes.SET_PRODUCTS,\r\n        payload: products,\r\n    };\r\n};\r\n\r\nexport const selectedProduct = (product) => {\r\n    return {\r\n        type: ActionTypes.SELECTED_PRODUCTS,\r\n        payload: product,\r\n    };\r\n};\r\n\r\nexport const removeSelectedProduct = () => {\r\n  return {\r\n    type: ActionTypes.REMOVE_SELECTED_PRODUCT,\r\n  };\r\n};","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProductComponent from './productComponent';\r\nimport axios from 'axios';\r\nimport { setProducts } from '../redux/actions/productActions';\r\n\r\nconst ProductListing = () => {\r\n    const products = useSelector((state) => state.allProducts.product);\r\n    const dispatch = useDispatch();\r\n    console.log(products);\r\n\r\n    const fetchProducts = async () => {\r\n        const response = await axios.get(\"https://fakestoreapi.com/products\").catch((err) => {\r\n            console.log(\"error\", err);\r\n        });\r\n        dispatch(setProducts(response.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"ui grid container\">\r\n            <ProductComponent/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProductListing;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedProduct, removeSelectedProduct } from \"../redux/actions/productActions\";\r\n\r\n\r\nconst ProductDetails = () => {\r\n  const product = useSelector((state) => state.product);\r\n  const { image, title, price, category, description } = product;\r\n  const { productId } = useParams();\r\n  const dispatch = useDispatch();\r\n  console.log(product);\r\n\r\n  const fetchProductDetail = async () => {\r\n    const response = await axios.get(`https://fakestoreapi.com/products/${productId}`).catch((err) => {\r\n      console.log(\"Err\", err);\r\n    });\r\n    \r\n    dispatch(selectedProduct(response.data));\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (productId && productId !== \"\") fetchProductDetail();\r\n    return () => {\r\n      dispatch(removeSelectedProduct());\r\n    }\r\n  }, [productId]);\r\n\r\n  return (\r\n    <div className=\"ui grid container\">\r\n      {Object.keys(product).length === 0 ? (\r\n        <div>...Loading</div>\r\n      ) : (\r\n        <div className=\"ui placeholder segment\">\r\n          <div className=\"ui two column stackable center aligned grid\">\r\n            <div className=\"ui vertical divider\">AND</div>\r\n            <div className=\"middle aligned row\">\r\n              <div className=\"column lp\">\r\n                <img className=\"ui fluid image\" src={image} />\r\n              </div>\r\n              <div className=\"column rp\">\r\n                <h1>{title}</h1>\r\n                <h2>\r\n                  <a className=\"ui teal tag label\">${price}</a>\r\n                </h2>\r\n                <h3 className=\"ui brown block header\">{category}</h3>\r\n                <p>{description}</p>\r\n                <div className=\"ui vertical animated button\" tabIndex=\"0\">\r\n                  <div className=\"hidden content\">\r\n                    <i className=\"shop icon\"></i>\r\n                  </div>\r\n                  <div className=\"visible content\">Add to Cart</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import React from 'react'\r\n\r\nconst Cart = () => {\r\n    return (\r\n        <div className=\"cart visible\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import './App.css';\r\nimport Header from './containers/header';\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ProductListing from \"./containers/productListing\";\r\nimport ProductDetails from './containers/productDetails';\r\nimport Cart from './containers/cart';\r\n\r\nexport default function app() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={ProductListing} />\r\n            <Route\r\n              path=\"/product/:productId\"\r\n              exact\r\n              component={ProductDetails}\r\n            />\r\n            <Route>404 Not Found!</Route>\r\n          </Switch>\r\n          <Cart/>\r\n        </Router>\r\n      </div>\r\n    );\r\n}\r\n","import { ActionTypes } from \"../contants/action-type\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n};\r\n\r\nexport const productReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.SET_PRODUCTS:\r\n            return {...state, products:payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const selectedProductReducer = (state = {}, { type, payload }) => {\r\n    switch (type) {\r\n      case ActionTypes.SELECTED_PRODUCTS:\r\n        return { ...state, ...payload };\r\n      case ActionTypes.REMOVE_SELECTED_PRODUCT:\r\n        return {};\r\n      default:\r\n        return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { productReducer, selectedProductReducer } from \"./productReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  allProducts: productReducer,\r\n  product: selectedProductReducer,\r\n});\r\n\r\nexport default reducers;","import { createStore } from \"redux\";\r\nimport reducers  from \"./reducers/index\";\r\n\r\n\r\nconst store = createStore(reducers, {});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}