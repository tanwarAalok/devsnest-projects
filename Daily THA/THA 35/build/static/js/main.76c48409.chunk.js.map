{"version":3,"sources":["actions/index.ts","components/Navbar.tsx","components/Post.tsx","components/Landing.tsx","App.tsx","reducers/userReducer.ts","reducers/notesReducer.ts","reducers/indes.ts","store.ts","index.tsx"],"names":["updateUser","dispatch","fetch","then","res","json","data","type","payload","NavbarFunction","user","useSelector","state","useDispatch","useEffect","className","href","src","placeholder","id","profilePicture","alt","Post","post","useState","chats","setChat","isLiked","setIsLiked","isMarked","setIsMarked","input","setInput","username","onClick","value","onChange","e","target","map","chat","index","Landing","posts","story","useRef","current","scrollBy","top","left","behavior","ref","Array","_","i","length","App","setPosts","Navbar","initialUser","userReducer","action","notesReducer","rootReducer","combineReducers","notes","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76c48409.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport interface User{\r\n    username: string,\r\n    profilePicture: string\r\n}\r\n\r\nconst updateUser = () => {\r\n    return (dispatch: any) => {\r\n        fetch(\"/data/user.json\")\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: \"UPDATE_USER\",\r\n                    payload: data,\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport { updateUser};","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { updateUser } from \"../actions/index\";\r\n\r\n\r\nfunction NavbarFunction() {\r\n  const user = useSelector((state: any) => state.user);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(updateUser());\r\n  }, [])\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <img src=\"/img/insta.png\" />\r\n          </a>\r\n          <div className=\"search\">\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\r\n          </div>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav  mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  <i className=\"bi bi-house-door-fill\"></i>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  <i className=\"bi bi-chat\"></i>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  <i className=\"bi bi-compass\"></i>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  <i className=\"bi bi-heart\"></i>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  <img src={user.profilePicture} alt=\"\" />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default NavbarFunction;\r\n","\r\nimport { useState } from 'react';\r\nimport { PostType } from '../App';\r\n\r\nconst Post = ({ post }: { post: PostType }) => {\r\n  const [chats, setChat] = useState<any>([]);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [isMarked, setIsMarked] = useState(false);\r\n    const [input, setInput] = useState<string>(\"\");\r\n    \r\n    return (\r\n      <div className=\"card post\">\r\n        <div className=\"card-header\">\r\n          <img src={post.profilePicture} alt=\"\" />\r\n          <h5 className=\"card-title\">{post.username}</h5>\r\n          <i className=\"bi bi-three-dots\"></i>\r\n        </div>\r\n        <img src={post.post} className=\"card-img-top\" alt=\"...\" />\r\n        <div className=\"buttons\">\r\n          <i\r\n            className={isLiked ? \"bi bi-heart-fill liked\" : \"bi bi-heart\"}\r\n            onClick={() => {\r\n              setIsLiked(!isLiked);\r\n            }}\r\n          ></i>\r\n          <i className=\"bi bi-chat\"></i>\r\n          <i className=\"bi bi-share\"></i>\r\n          <i\r\n            id=\"book\"\r\n            className={\r\n              isMarked ? \"bi bi-bookmark-fill\" : \"bi bi-bookmark\"\r\n            }\r\n            onClick={() => {\r\n              setIsMarked(!isMarked);\r\n            }}\r\n          ></i>\r\n        </div>\r\n        <div className=\"foot\">\r\n          <i className=\"bi bi-emoji-smile smile\"></i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a comment..\"\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            className=\"add\"\r\n            onClick={() => {\r\n              setChat([...chats,input]);\r\n              setInput(\"\");\r\n            }}\r\n          >\r\n            Post\r\n          </button>\r\n        </div>\r\n        <div className=\"comments\">\r\n          <ul>\r\n            {chats.map((chat: string, index: number) => (\r\n              <div className=\"comment\">\r\n                <li key={index}>\r\n                  <p>{chat}</p>\r\n                </li>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { PostType } from '../App';\r\nimport Post from './Post';\r\n\r\nconst Landing = ({posts}: {posts: PostType[]}) => {\r\n    const user = useSelector((state: any) => state.user);\r\n\r\n    const story = useRef<any>(null);\r\n    useEffect(() => {\r\n        story.current.scrollBy({\r\n            top: 0,\r\n            left: 1000,\r\n            behavior: \"smooth\",\r\n        })\r\n    }, []);\r\n    \r\n    return (\r\n      <div className=\"container landing\">\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <div className=\"card story\" ref= {story}>\r\n              {[...Array(15)].map((_, i) => (\r\n                <div className=\"story-img\">\r\n                  <img src={user.profilePicture} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"posts\">\r\n                {posts.length > 0 ? posts.map((post) => (\r\n                    <Post post={post} />\r\n                )): null}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-4\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Landing\r\n","\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport NavbarFunction from './components/Navbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { User, updateUser } from \"./actions\";\nimport React, { useEffect } from 'react';\nimport Landing from './components/Landing';\nimport { useState } from 'react';\n\n\nexport interface PostType{\n  username: string,\n  post: string,\n  profilePicture: any,\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [posts, setPosts] = useState<PostType[]>([]);\n\n  useEffect(() => {\n    dispatch(updateUser);\n    fetch(\"/data/post.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts(data);\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <NavbarFunction />\n      <Landing posts={posts}/>\n    </div>\n  );\n};\n\nexport default App;\n","import { User } from \"../actions\";\r\n\r\nconst initialUser = {\r\n    username: \"\",\r\n    profilePicture: \"\"\r\n}\r\nexport interface actionType{\r\n    type: \"UPDATE_USER\",\r\n    payload: User\r\n}\r\n\r\nconst userReducer = (state: User = initialUser, action: any) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_USER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default userReducer;","interface ActionType {\r\n  type: string;\r\n  payload: string | number;\r\n}\r\n\r\nconst notesReducer = (state: any = [], action: ActionType) => {\r\n  switch (action.type) {\r\n    case \"ADD_NOTE\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notesReducer;\r\n","import userReducer from \"./userReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport notesReducer from \"./notesReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/indes\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}